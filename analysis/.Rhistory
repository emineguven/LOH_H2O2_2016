modelBlack0.5B = function(v) { b0.5.max - (b0.5.max-b0.5.min)/(1 + (t/v)^1) }
fm.b0.5One <- gnls( b ~ modelBlack0.5B(v) , start = list( v = 0.003) );
fm.b0.5One
fm.b1
fm.bOld
fm.b0.5V2
fm.b0.5 <- gnls( b0.5 ~ modelBlack0.5(v,w) , start = list( v = 0.005, w=1), weights=varPower(form=~b0.5)  );
modelBlack0.5B = function(v) { b0.5.max - (b0.5.max-b0.5.min)/(1 + (t/v)^1) }
fm.b0.5One <- gnls( b ~ modelBlack0.5B(v) , start = list( v = 0.003) );
fm.b0.5One
ii
# 20131205, gnls with weights, This script is run ad hoc
rm(list=ls());
require(nlme)
setwd("~/github/LOH_H2O2_2012-master/")
######## functions
#logistical.viability <- function( T, w, t ) { ret <- 1 /( 1 + ( t / T )^ w );  }
#logistical.mortality <- function( T, w, t ) {  ( w * t^(w-1) ) / (( 1 + (t/T)^w ) * T^w ); }
#logistical.black     <- function(b.max, b.min, T, w, t ) { ret <- b.max - (b.max - b.min) /( 1 + ( t / T )^ w );  }
#derivative.black <- function(b.max, b.min, T, w, t) {(b.max - b.min) * w * (t^(w -1)) / ((1 + (t / T )^w)^2 * T^w );}
#genome.integrity <- function(b.max, b.min, T, w, t) {  2 * (b.max - b.min) / (1 + (t/T)^w) + (1 - 2 * b.max); }
############ end of functions
ctl.tb = read.csv( "_ctl.tb_out.20131204_12,25pm.csv") #20131204
ctl.tb.input = ctl.tb
files = list.files(path="data.H2O2-LOH")
#change here, and run step by step!!!!!!!!
ii=12
#for( file in files ) {
rm (fm.s, fm.b )
#if ( grep("fm.s", ls())  ) { rm (fm.s) }
#if ( grep("fm.b", ls()) ) { rm (fm.b) }
#ii = match( file, ctl.tb$files)
infile = ctl.tb$files[ii]
fullFileName = paste('data.H2O2-LOH/',infile, sep='');
mylabel = infile
tb = read.csv(fullFileName, colClasses=c("character",NA, NA, "character", rep("numeric",8 ), NA));
names(tb) = c("Strain", "OD600", "Dilution","Date","H2O2stock", "White", "Black", "halfBlack", "quarterBlack", "ThreeQBlack", "QQBlack", "Other", "Notes")
tb.ori = tb;
####replace NA with zeros
mycolumns = c("White","Black","halfBlack", "quarterBlack","ThreeQBlack", "QQBlack", "Other");
for ( i in 1:length(tb[,1])) {
for ( j in mycolumns) {
if( is.na(tb[i,j]) ) { tb[i,j]= 0; }
}
}
tb = tb[tb$White>10, ]  ## remove plates with too few colonies
tb$H2O2 = tb$H2O2stock/2  #working H2O2 stock is 2X before it is added to the reaction mix
tb$tot = tb$White + tb$Black + tb$halfBlack + tb$quarterBlack + tb$ThreeQBlack + tb$QQBlack + tb$Other
#tb.ori = tb;
tb = tb[ ! is.na(tb$White), ]
#tb = tb[tb$tot>2, ] # I need >=2 colonies. One white and one black. #weird, did not work?!
tb$Dilution = tb$Dilution / tb$Dilution[1]
#### adjust for low colony counts
tb$Black[tb$Black==0] = 0.5
tb$halfBlack[tb$halfBlack==0] = 0.5
######## normalize all data
mycolumns = c("White","Black","halfBlack", "quarterBlack","ThreeQBlack", "QQBlack", "Other","tot");
for ( j in mycolumns) {
tb[,j] = tb[,j] * tb$Dilution
}
tb = tb[tb$tot>0, ]
tb$Black[tb$Black<0]=NA;  #weird experimental data, such as low-lead concentration effect, as input as negative counts
###### calculate fractions
tb$s = tb$tot / max(tb$tot)
for ( j in 6:12) {
tb[, j] = tb[,j] / tb$tot
}
######## calclulate T0.5 w_s
t= tb$H2O2
s= tb$s
model1 = function(v,w) {  1/( 1 + ( t / v )^ w ) }
fm.s <- gnls( s ~ model1(v,w) ,
start = list( v = ctl.tb$Cv[ii], w=ctl.tb$CvW[ii]), weights=varPower(form=~s)  );
#    fm.s <- gnls( s ~ model1(v,w) , start = list( v = 0.01, w=1.5)  );
fm.s
model2 = function(v) {  1/( 1 + (t / v)^1.9) }
fm.s2 <- gnls( s ~ model2(v) ,                start = list( v = 0.01), weights=varPower(form=~s)  );
fm.s2
t2=t; t2[t2==min(t2)]=1E-4
plot(s ~ t2, main=infile, log='x')
plot(s ~ t2, main=infile, log='xy')
plot(s ~ t, main=infile)
# try exponetial survival funciton
modelExp = function(v){ exp(-t/v) }
fm.sE <- gnls( s ~ modelExp(v) ,   start = list( v = 0.05) );
fm.sE
##############full blacks
#logistical.black <- function(b.max, b.min, T, w, t ) { ret <- b.max - (b.max - b.min) /( 1 + ( t / T )^ w );  }
b = tb$Black
#fill the missing values with imputing
for( bi in 2: (length(b)-1 ) ) {
if( is.na(b[bi]) )  { b[bi] = b[bi-1]/2 + b[bi+1]/2 }
}
if( is.na(b[length(b)]) )  { b[length(b)] = b[length(b)-1] }
#estimate starting values
b.tmp = sort( b[ b>0 ] );
b.min = b.tmp[2]/2 + b.tmp[3]/2;
b.tmp = rev(b.tmp);
b.max = b.tmp[ 2 ] /2 + b.tmp[ 3] /2;  #2013Dec5, changed to 2nd and 3rd choices, to mitigate outlier bias
t2 = t
t2[t2<=min(t2)] = 0.5E-3  #this seems to fix a running time error
plot( b ~ t2, log='x', main=infile)
plot( b ~ t, main=infile)
##remove some outliers
#b2 = b; t2 = t;
#b2[t2 == 0.15]=NA
#t2[t2==0.15]=NA
#b2=b2[!is.na(b2)]
#t2=t2[!is.na(t2)]
modelBlack1 = function(v) { b.max - (b.max-b.min)/(1 + (t/v)^1) }
fm.b1 <- gnls( b ~ modelBlack1(v) , start = list( v = 0.0015), weights=varPower(form=~b));
fm.b1
modelBlack = function(v, w) { b.max - (b.max-b.min)/(1 + (t/v)^w) }
fm.bOld <- gnls( b ~ modelBlack(v,w) , start = list( v = 0.01, w= 0.5));# old fit
fm.bOld
#fm.b <- gnls( b ~ modelBlack(v,w) , start = list( v = ctl.tb$Cv[ii], w=ctl.tb$CvW[ii])  ); #20130530
#fm.b <- gnls( b ~ modelBlack(v,w) , start = list( v = fm.s$coef[1], w= fm.s$coef[2]   ) );
#    fm.b <- gnls( b ~ modelBlack(v,w) , start = list( v = ctl.tb$Cb[ii], w= ctl.tb$CbW[ii]), weights=varPower(form=~b));
fm.b <- gnls( b ~ modelBlack(v,w) , start = list( v = 0.01, w= 1), weights=varPower(form=~b));
fm.b
ctl.tb$Cb[ii]= fm.b$coef[1];
ctl.tb$CbW[ii] = fm.b$coef[2]
ctl.tb$b.min[ii] = b.min
ctl.tb$b.max[ii] = b.max
##############################################
############# fit half-black colonies
#logistical.black <- function(b.max, b.min, T, w, t ) { ret <- b.max - (b.max - b.min) /( 1 + ( t / T )^ w );  }
t= tb$H2O2;
b0.5 = tb$halfBlack
#fill the missing values with imputing
for( bi in 2: (length(b0.5)-1 ) ) {
if( is.na(b0.5[bi]) )  { b0.5[bi] = b0.5[bi-1]/2 + b0.5[bi+1]/2 }
}
if( is.na(b0.5[length(b)]) )  { b0.5[length(b)] = b0.5[length(b)-1] }
#estimate starting values
b0.5.tmp = sort( b0.5[ b0.5>0 ] );
b0.5.min = b0.5.tmp[2]/2 + b0.5.tmp[3]/2;
b0.5.tmp = rev(b0.5.tmp);
b0.5.max = b0.5.tmp[ 2 ] /2 + b0.5.tmp[3] /2;
t2=t; t2[t2==min(t2)]=1E-5
plot( b0.5 ~ t2, log='x', main=infile )
plot( b0.5 ~ t,  main=infile )
#fm.b0.5 <- gnls( b0.5 ~ modelBlack0.5(v,w) , start = list( v = ctl.tb$Cb[ii], w=ctl.tb$CbW[ii])  ); #use full blacks as initial values
#fm.b <- gnls( b ~ modelBlack(v,w) , start = list( v = fm.s$coef[1], w= fm.s$coef[2]   ) );
#if (infile =="BY4743,20120907,H2O2LOH.csv" ) {
modelBlack0.5B = function(v) { b0.5.max - (b0.5.max-b0.5.min)/(1 + (t/v)^1) }
fm.b0.5One <- gnls( b ~ modelBlack0.5B(v) , start = list( v = 0.003) );
fm.b0.5One
#fm.b0.5 <- gnls( b0.5 ~ modelBlack0.5(v,w) , start = list( v = ctl.tb$Cb[ii], w=ctl.tb$CbW[ii])  ); #use full blacks as initial values
#fm.b0.5.old <- gnls( b0.5 ~ modelBlack0.5(v,w) , start = list( v = ctl.tb$Cb0.5[ii], w=ctl.tb$CbW[ii])  ); #update half-blacks as initial values
#fm.b0.5 <- gnls( b0.5 ~ modelBlack0.5(v,w) , start = list( v = ctl.tb$Cb0.5[ii], w=ctl.tb$CbW[ii]),weights=varPower(form=~b0.5)  ); #update half-blacks as initial values
modelBlack0.5 = function(v, w) { b0.5.max - (b0.5.max-b0.5.min)/(1 + (t/v)^w) }
fm.b0.5 <- gnls( b0.5 ~ modelBlack0.5(v,w) , start = list( v = 0.005, w=1), weights=varPower(form=~b0.5)  );
fm.b0.5
fm.b0.5V2 <- gnls( b0.5 ~ modelBlack0.5(v,w) , start = list( v = 0.005, w=5) ); s
fm.b0.5V2
ctl.tb$Cb0.5[ii]= fm.b0.5$coef[1];
ctl.tb$Cb0.5W[ii] = fm.b0.5$coef[2]
ctl.tb$b0.5.min[ii] = b0.5.min
ctl.tb$b0.5.max[ii] = b0.5.max
#}
#ctl.tb$Cv.vs.Cb = ctl.tb$Cv / ctl.tb$Cb
#ctl.tb$Cb.vs.Cv = ctl.tb$Cb / ctl.tb$Cb
#hist(ctl.tb$Cv.vs.Cb)
#summary(ctl.tb$Cv.vs.Cb)
#table(ctl.tb$Cv.vs.Cb)
#write.csv(ctl.tb, '_ctl.tb_out.20131205.csv', quote=T, row.names=F)
fm.s
fm.sE
fm.b0.5V2
fm.b0.5
fm.b0.5V2
fm.b0.5One
setwd("~/github/LOH_H2O2_2012-master/analysis")
list.files(, pattern="csv")
list.files(, pattern="_\*csv")
list.files(, pattern="_\\*csv")
list.files(, pattern="_merged")
tbH2O2 = read.csv("_merged.tb.20131206_14,49pm.csv")
View(tbH2O2)
#read step-by-step fitting results, using _2a2.2013Dec5.stepBystep.gnslWeights.R
tbH2O2 = read.csv("_merged.tb.20131206_14,49pm.csv")
str(tbH2O2)
#find strains, gsub
tbH2O2$strains = gsub("[\\,|\\.].*", "", tbH2O2$file)
strains2 = unique(tbH2O2$strains)[c(1:2,3:8,10:15)]
table(tbH2O2$strains)
tbH2O2$Cb.vs.Cv = tbH2O2$Cb / tbH2O2$Cv
tbH2O2$Cv.vs.Cb = tbH2O2$Cv / tbH2O2$Cb
tbH2O2Report = data.frame(strains2)
names( tbH2O2Report ) = c("strains")
names(tbH2O2)
tbH2O2$Cb.vs.Cv = tbH2O2$Cb / tbH2O2$Cv
tbH2O2$Cv.vs.Cb = tbH2O2$Cv / tbH2O2$Cb
tbH2O2$Cb0.5.vs.Cv = tbH2O2$Cb0.5 / tbH2O2$Cv
tbH2O2$Cv.vs.Cb0.5 = tbH2O2$Cv / tbH2O2$Cb0.5
tbH2O2$Cb.vs.Cv = tbH2O2$Cb / tbH2O2$Cv
tbH2O2$Cv.vs.Cb = tbH2O2$Cv / tbH2O2$Cb
tbH2O2$Cb0.5.vs.Cv = tbH2O2$Cb0.5 / tbH2O2$Cv
tbH2O2$Cv.vs.Cb0.5 = tbH2O2$Cv / tbH2O2$Cb0.5
tbH2O2$half.vs.full = tbH2O2$Cb0.5 / tbH2O2$Cb
str( tbH2O2  )
# summarize H2O2-LOH data from _2a2.2013Dec5.stepBystep.gnslWeights.R
rm(list=ls())
setwd("~/github/LOH_H2O2_2012-master/analysis")
list.files(, pattern="_merged")
#read step-by-step fitting results, using _2a2.2013Dec5.stepBystep.gnslWeights.R
tbH2O2 = read.csv("_merged.tb.20131206_14,49pm.csv")
str(tbH2O2)
#find strains, gsub
tbH2O2$strains = gsub("[\\,|\\.].*", "", tbH2O2$file)
strains2 = unique(tbH2O2$strains)[c(1:2,3:8,10:15)]
table(tbH2O2$strains)
tbH2O2$Cb.vs.Cv = tbH2O2$Cb / tbH2O2$Cv
tbH2O2$Cv.vs.Cb = tbH2O2$Cv / tbH2O2$Cb
tbH2O2$Cb0.5.vs.Cv = tbH2O2$Cb0.5 / tbH2O2$Cv
tbH2O2$half.vs.full = tbH2O2$Cb0.5 / tbH2O2$Cb
str( tbH2O2  )
tbH2O2Report = data.frame(strains2)
names( tbH2O2Report ) = c("strains")
# strain = 'BY4743' i =1
for( i in 1:length(strains2) ) {
tmp = tbH2O2[tbH2O2$strains == strains2[i],  ]
tbH2O2Report$CvMean[i] = mean(tmp$Cv, na.rm=T)
tbH2O2Report$CvSTD[i] = sd(tmp$Cv, na.rm=T)
tbH2O2Report$CbMean[i] = mean(tmp$Cb, na.rm=T)
tbH2O2Report$CbSTD[i] = sd(tmp$Cb, na.rm=T)
tbH2O2Report$bminH2O2[i] = mean(tmp$b.min, na.rm=T)
tbH2O2Report$bmaxH2O2[i] = mean(tmp$b.max, na.rm=T)
tbH2O2Report$Cb0.5Mean[i] = mean(tmp$Cb0.5, na.rm=T)
tbH2O2Report$Cb.05STD[i] = sd(tmp$Cb0.5, na.rm=T)
tbH2O2Report$b0.5minH2O2[i] = mean(tmp$b0.5.min, na.rm=T)
tbH2O2Report$b0.5maxH2O2[i] = mean(tmp$b0.5.max, na.rm=T)
#Two ways to calculate the ratios
tbH2O2Report$Cv.vs.Cb[i] = mean(tmp$Cv.vs.Cb, na.rm=T)
tbH2O2Report$Cv.vs.Cb.STD[i] = sd(tmp$Cv.vs.Cb, na.rm=T)
tbH2O2Report$Cb.vs.Cv[i] = mean(tmp$Cb.vs.Cv, na.rm=T)
tbH2O2Report$Cb.vs.Cv.STD[i] = sd(tmp$Cb.vs.Cv, na.rm=T)
tbH2O2Report$Cb0.5.vs.Cv[i] = mean(tmp$Cb0.5.vs.Cv, na.rm=T)
tbH2O2Report$Cb0.5.vs.Cv.STD[i] = sd(tmp$Cb0.5.vs.Cv, na.rm=T)
tbH2O2Report$half.vs.full[i] = sd(tmp$half.vs.full, na.rm=T)
#tbH2O2Report$Cv.vs.Cb.byMeans[i] = tbH2O2Report$CvMean[i] / tbH2O2Report$CbMean[i]
#tbH2O2Report$Cv.vs.Cb.byMeansSTD[i] = tbH2O2Report$Cv.vs.Cb.byMeans[i]*sqrt( (tbH2O2Report$CvSTD[i] / tbH2O2Report$CvMean[i])^2 + (tbH2O2Report$CbSTD[i] / tbH2O2Report$CbMean[i])^2 )
#tbH2O2Report$Cb.vs.Cv.byMeans[i] = tbH2O2Report$CbMean[i] / tbH2O2Report$CvMean[i]
#tbH2O2Report$Cb.vs.Cv.byMeansSTD[i] = tbH2O2Report$Cb.vs.Cv.byMeans[i]*sqrt( (tbH2O2Report$CvSTD[i] / tbH2O2Report$CvMean[i])^2 + (tbH2O2Report$CbSTD[i] / tbH2O2Report$CbMean[i])^2 )
}
rownames(tbH2O2Report)= tbH2O2Report$strains
write.csv(tbH2O2Report, file="output/LOHH2O2_averaged20131206.csv", row.names=F)
#WildStrains=c('101S','M1-2', 'M13','M2-8','M32','M34','M5','M8','SGU57','YPS128','YPS163')
#tbH2O2ReportNat = tbH2O2Report[NatStrains,]
#write.csv(tbH2O2ReportNat, file="output/LOHH2O2_all_20131126.csv", quote=F, row.names=F)
#quit("no")
View(tbH2O2Report)
tbH2O2$strains
# summarize H2O2-LOH data from _2a2.2013Dec5.stepBystep.gnslWeights.R
rm(list=ls())
setwd("~/github/LOH_H2O2_2012-master/analysis")
list.files(, pattern="_merged")
#read step-by-step fitting results, using _2a2.2013Dec5.stepBystep.gnslWeights.R
tbH2O2 = read.csv("_merged.tb.20131206_14,49pm.csv")
str(tbH2O2)
#find strains, gsub
tbH2O2$strains = gsub("[\\,|\\.].*", "", tbH2O2$file)
strains2 = unique(tbH2O2$strains)
table(tbH2O2$strains)
tbH2O2$Cb.vs.Cv = tbH2O2$Cb / tbH2O2$Cv
tbH2O2$Cv.vs.Cb = tbH2O2$Cv / tbH2O2$Cb
tbH2O2$Cb0.5.vs.Cv = tbH2O2$Cb0.5 / tbH2O2$Cv
tbH2O2$half.vs.full = tbH2O2$Cb0.5 / tbH2O2$Cb
str( tbH2O2  )
tbH2O2Report = data.frame(strains2)
names( tbH2O2Report ) = c("strains")
# strain = 'BY4743' i =1
for( i in 1:length(strains2) ) {
tmp = tbH2O2[tbH2O2$strains == strains2[i],  ]
tbH2O2Report$CvMean[i] = mean(tmp$Cv, na.rm=T)
tbH2O2Report$CvSTD[i] = sd(tmp$Cv, na.rm=T)
tbH2O2Report$CbMean[i] = mean(tmp$Cb, na.rm=T)
tbH2O2Report$CbSTD[i] = sd(tmp$Cb, na.rm=T)
tbH2O2Report$bminH2O2[i] = mean(tmp$b.min, na.rm=T)
tbH2O2Report$bmaxH2O2[i] = mean(tmp$b.max, na.rm=T)
tbH2O2Report$Cb0.5Mean[i] = mean(tmp$Cb0.5, na.rm=T)
tbH2O2Report$Cb.05STD[i] = sd(tmp$Cb0.5, na.rm=T)
tbH2O2Report$b0.5minH2O2[i] = mean(tmp$b0.5.min, na.rm=T)
tbH2O2Report$b0.5maxH2O2[i] = mean(tmp$b0.5.max, na.rm=T)
#Two ways to calculate the ratios
tbH2O2Report$Cv.vs.Cb[i] = mean(tmp$Cv.vs.Cb, na.rm=T)
tbH2O2Report$Cv.vs.Cb.STD[i] = sd(tmp$Cv.vs.Cb, na.rm=T)
tbH2O2Report$Cb.vs.Cv[i] = mean(tmp$Cb.vs.Cv, na.rm=T)
tbH2O2Report$Cb.vs.Cv.STD[i] = sd(tmp$Cb.vs.Cv, na.rm=T)
tbH2O2Report$Cb0.5.vs.Cv[i] = mean(tmp$Cb0.5.vs.Cv, na.rm=T)
tbH2O2Report$Cb0.5.vs.Cv.STD[i] = sd(tmp$Cb0.5.vs.Cv, na.rm=T)
tbH2O2Report$half.vs.full[i] = sd(tmp$half.vs.full, na.rm=T)
#tbH2O2Report$Cv.vs.Cb.byMeans[i] = tbH2O2Report$CvMean[i] / tbH2O2Report$CbMean[i]
#tbH2O2Report$Cv.vs.Cb.byMeansSTD[i] = tbH2O2Report$Cv.vs.Cb.byMeans[i]*sqrt( (tbH2O2Report$CvSTD[i] / tbH2O2Report$CvMean[i])^2 + (tbH2O2Report$CbSTD[i] / tbH2O2Report$CbMean[i])^2 )
#tbH2O2Report$Cb.vs.Cv.byMeans[i] = tbH2O2Report$CbMean[i] / tbH2O2Report$CvMean[i]
#tbH2O2Report$Cb.vs.Cv.byMeansSTD[i] = tbH2O2Report$Cb.vs.Cv.byMeans[i]*sqrt( (tbH2O2Report$CvSTD[i] / tbH2O2Report$CvMean[i])^2 + (tbH2O2Report$CbSTD[i] / tbH2O2Report$CbMean[i])^2 )
}
rownames(tbH2O2Report)= tbH2O2Report$strains
write.csv(tbH2O2Report, file="output/LOHH2O2_averaged20131206.csv", row.names=F)
#WildStrains=c('101S','M1-2', 'M13','M2-8','M32','M34','M5','M8','SGU57','YPS128','YPS163')
#tbH2O2ReportNat = tbH2O2Report[NatStrains,]
#write.csv(tbH2O2ReportNat, file="output/LOHH2O2_all_20131126.csv", quote=F, row.names=F)
#quit("no")
View(tbH2O2Report)
rm( list = ls() );
#setwd("~/projects/LOH-oxidants2012.osX/analysis")
setwd("~/github/LOH_H2O2_2012-master/analysis")
###############
#Load 2013 H2O2-LOH results
list.files(pattern="csv", path="output")
tb2 = read.csv("output/LOHH2O2_all_20131127.csv")
rownames(tb2) = as.character(tb2$strains)
list.files(pattern="csv", path="output")
tb2 = read.csv("output/LOHH2O2_averaged20131206.csv")
rownames(tb2) = as.character(tb2$strains)
str(tb2)
tb2
names(tb2)[c(3,14)]
rownames(tb2)[c(3,14)]
rownames(tb2)
rownames(tb2)[c(3,12)]
tb2= tb2[-c(3,12), ]
#### analyze H2O2-LOH in tb2
#raw values
hist(tb2$Cv.vs.Cb, br=10)
hist(log2(tb2$Cv.vs.Cb), br=10)
summary(tb2)
hist(log2(1/tb2$Cv.vs.Cb), br=10)
##### #Load previous LOH-CLS results, Qin Plos One 2008
tb = read.table("summary.new.by.strain.csv", header=T, sep="\t");
tb.old = tb;
labels = names( tb.old );
tb = tb.old[, c("strain","ARLS","R0","G","CLS","Tc", "Tg","Tmmax","Tbmax", "Td", "Tdmax","TLmax","Lmax",
"b.max", "b.min", "strains", "L0.all", "L0.small" , "Pbt0","Pb0.5t0", "Pbt0.b") ];
tb$CLS.vs.Tc = tb$CLS / tb$Tc;
tb$Tg.vs.Tc = tb$Tg / tb$Tc;
tb$strain = as.character(tb$strain)
tb.old = tb;
tb = tb.old[1:13,] #remove rad52DD
tb.test = tb[1:11,]
summary(lm(Tg.vs.Tc ~ ARLS, data=tb.test)) #re-run the old results, just to double-check
plot( tb.test$Tg.vs.Tc ~ tb.test$ARLS )
text(tb.test$ARLS, tb.test$Tg.vs.Tc, tb.test$strains)
summary(lm( 1/Tg.vs.Tc ~ ARLS, data=tb.test)) #good, negative, p=0.012
nat = read.table("062705.rls.cls.tab", sep="\t", header=T, colClasses=c("character", rep(NA,4)) );
head(tb2)
tb$strains = tb$strain
tb3a = merge(tb, tb2, by='strains', all=T)
summary(lm(1/tb3a$Cb.vs.Cv ~ tb3a$ARLS))
summary(lm(1/tb3a$Cb.vs.Cv.byMeans ~ tb3a$ARLS))
summary(lm(1/tb3a$Cb.vs.Cv ~ tb3a$ARLS))
summary(lm(tb3a$Cv.vs.Cb ~ tb3a$ARLS))
### regression analysis
pTb = 1: length(tb3a[1,])
names(pTb) = names(tb3a)
for( j in c(3:36) ) {
m = lm( tb3a[, j] ~ tb3a$ARLS, na.rm=T)
#m = lm( tb3a[, j] ~ tb3a$CvMean, na.rm=T)
#m = lm( tb3a[, j] ~ tb3a$CbMean, na.rm=T)
sm = summary(m)
pTb[j] = 1 - pf(sm$fsta[1], sm$fsta[2], sm$fsta[3])
}
pTb[pTb<0.05]
pTb
tb3a
str(tb3a)
names(tb3a)
### regression analysis
pTb = 1: length(tb3a[1,])
names(pTb) = names(tb3a)
for( j in c(3:40) ) {
m = lm( tb3a[, j] ~ tb3a$ARLS, na.rm=T)
#m = lm( tb3a[, j] ~ tb3a$CvMean, na.rm=T)
#m = lm( tb3a[, j] ~ tb3a$CbMean, na.rm=T)
sm = summary(m)
pTb[j] = 1 - pf(sm$fsta[1], sm$fsta[2], sm$fsta[3])
}
pTb[pTb<0.05]
### regression analysis
pTb = 1: length(tb3a[1,])
names(pTb) = names(tb3a)
for( j in c(3:40) ) {
#m = lm( tb3a[, j] ~ tb3a$ARLS, na.rm=T)
m = lm( tb3a[, j] ~ tb3a$CvMean, na.rm=T)
#m = lm( tb3a[, j] ~ tb3a$CbMean, na.rm=T)
sm = summary(m)
pTb[j] = 1 - pf(sm$fsta[1], sm$fsta[2], sm$fsta[3])
}
pTb[pTb<0.05]
### regression analysis
pTb = 1: length(tb3a[1,])
names(pTb) = names(tb3a)
for( j in c(3:40) ) {
#m = lm( tb3a[, j] ~ tb3a$ARLS, na.rm=T)
m = lm( tb3a[, j] ~ tb3a$CLS, na.rm=T)
#m = lm( tb3a[, j] ~ tb3a$CbMean, na.rm=T)
sm = summary(m)
pTb[j] = 1 - pf(sm$fsta[1], sm$fsta[2], sm$fsta[3])
}
pTb[pTb<0.05]
plot( tb3a$ARLS ~ tb3a$Cb.vs.Cv)
plot( 1/tb3a$Cv.vs.Cb ~ ARLS)
plot( 1/tb3a$Cv.vs.Cb ~ tb3a$ARLS)
?text
plot( tb$ARLS ~ tb$Cv.vs.Cb , pch=19, col="red", main="H2O2-LOH ~ ARLS, 20130618", ylim=c(22,38),xlim=c(0.5,4.2)
, ylab='ARLS',xlab='Cv/Cb Tolerance to H2O2-induced genomic instability')
text( tb$Cv.vs.Cb+0.08, tb$ARLS+0.5, tb$strain)
m = lm(tb$ARLS ~ tb$Cv.vs.Cb  )
abline( m, col="blue")
summary(m)
text(3.5, 35,  "R2=0.37 p=0.035")
plot( tb$ARLS ~ tb$Cv.vs.Cb , pch=19, col="red", main="H2O2-LOH ~ ARLS, 20130618", ylim=c(22,38),xlim=c(0.5,4.2)
, ylab='ARLS',xlab='Cv/Cb Tolerance to H2O2-induced genomic instability')
text( tb$Cv.vs.Cb+0.08, tb$ARLS+0.5, tb$strain)
plot( tb$ARLS ~ 1/tb$Cb.vs.Cv , pch=19, col="red", main="H2O2-LOH ~ ARLS, 20130618", ylim=c(22,38),xlim=c(0.5,4.2)
, ylab='ARLS',xlab='Cv/Cb Tolerance to H2O2-induced genomic instability')
plot( tb3a$ARLS ~ 1/tb3a$Cb.vs.Cv , pch=19, col="red", main="H2O2-LOH ~ ARLS, 20130618", ylim=c(22,38),xlim=c(0.5,4.2)
, ylab='ARLS',xlab='Cv/Cb Tolerance to H2O2-induced genomic instability')
text( tb3a$Cv.vs.Cb+0.08, tb3a$ARLS+0.5, tb$strain)
plot( tb3a$ARLS ~ 1/tb3a$Cb.vs.Cv , pch=19, col="red", main="H2O2-LOH ~ ARLS, 20130618", ylim=c(22,38),xlim=c(0.5,4.2)
, ylab='ARLS',xlab='Cv/Cb Tolerance to H2O2-induced genomic instability')
text( 1/tb3a$Cb.vs.Cv+0.08, tb3a$ARLS+0.5, tb$strain)
plot( tb3a$ARLS ~ 1/tb3a$Cb.vs.Cv , pch=19, col="red", main="H2O2-LOH ~ ARLS, 20130618", ylim=c(22,38),xlim=c(0.1,4.2)
, ylab='ARLS',xlab='Cv/Cb Tolerance to H2O2-induced genomic instability')
text( 1/tb3a$Cb.vs.Cv+0.08, tb3a$ARLS+0.5, tb$strain)
plot( tb3a$ARLS ~ 1/tb3a$Cb.vs.Cv , pch=19, col="red", main="H2O2-LOH ~ ARLS, 20130618", ylim=c(22,38),xlim=c(0.1,4.2)
, ylab='ARLS',xlab='Cv/Cb Tolerance to H2O2-induced genomic instability')
text( 1/tb3a$Cb.vs.Cv+0.01, tb3a$ARLS+0.5, tb$strain)
plot( tb3a$ARLS ~ 1/tb3a$Cb.vs.Cv , pch=19, col="red", main="H2O2-LOH ~ ARLS, 20130618", ylim=c(22,38),xlim=c(0.1,4.2)
, ylab='ARLS',xlab='Cv/Cb Tolerance to H2O2-induced genomic instability')
text( 1/tb3a$Cb.vs.Cv+0.01, tb3a$ARLS, tb$strain)
plot( tb3a$ARLS ~ 1/tb3a$Cb.vs.Cv , pch=19, col="red", main="H2O2-LOH ~ ARLS, 20130618", ylim=c(22,38),xlim=c(0.1,4.2)
, ylab='ARLS',xlab='Cv/Cb Tolerance to H2O2-induced genomic instability')
text( 1/tb3a$Cb.vs.Cv , tb3a$ARLS, tb$strain)
plot( tb3a$ARLS ~ 1/tb3a$Cb.vs.Cv , pch=19, col="red", main="H2O2-LOH ~ ARLS, 20130618", ylim=c(22,38), #xlim=c(0.1,4.2)
, ylab='ARLS',xlab='Cv/Cb Tolerance to H2O2-induced genomic instability')
text( 1/tb3a$Cb.vs.Cv , tb3a$ARLS, tb$strain)
?text
plot( tb3a$ARLS ~ 1/tb3a$Cb.vs.Cv , pch=19, col="red", main="H2O2-LOH ~ ARLS, 20130618", ylim=c(22,38), #xlim=c(0.1,4.2)
, ylab='ARLS',xlab='Cv/Cb Tolerance to H2O2-induced genomic instability')
text( 1/tb3a$Cb.vs.Cv , tb3a$ARLS, tb$strain, offset=0)
?text
plot( tb3a$ARLS ~ 1/tb3a$Cb.vs.Cv , pch=19, col="red", main="H2O2-LOH ~ ARLS, 20130618", ylim=c(22,38), #xlim=c(0.1,4.2)
, ylab='ARLS',xlab='Cv/Cb Tolerance to H2O2-induced genomic instability')
text( 1/tb3a$Cb.vs.Cv , tb3a$ARLS, tb3a$strains, offset=0)
plot( tb3a$ARLS ~ 1/tb3a$Cb.vs.Cv , pch=19, col="red", main="H2O2-LOH ~ ARLS, 20130618", ylim=c(22,38), #xlim=c(0.1,4.2)
, ylab='ARLS',xlab='Cv/Cb Tolerance to H2O2-induced genomic instability')
text( 1/tb3a$Cb.vs.Cv , tb3a$ARLS, tb3a$strains)
tb3a$strain
tb3a$strains
par(font=2)
plot( tb3a$ARLS ~ 1/tb3a$Cb.vs.Cv , pch=19, col="red", main="H2O2-LOH ~ ARLS, 20130618", #ylim=c(22,38), #xlim=c(0.1,4.2)
, ylab='ARLS',xlab='Cv/Cb Tolerance to H2O2-induced genomic instability')
text( 1/tb3a$Cb.vs.Cv , tb3a$ARLS, tb3a$strains)
head(tb3a)
setwd("~/github/LOH_H2O2_2012-master/analysis")
list.files(, pattern="_merged")
#read step-by-step fitting results, using _2a2.2013Dec5.stepBystep.gnslWeights.R
tbH2O2 = read.csv("_merged.tb.20131206_14,49pm.csv")
str(tbH2O2)
#find strains, gsub
tbH2O2$strains = gsub("[\\,|\\.].*", "", tbH2O2$file)
strains2 = unique(tbH2O2$strains)
table(tbH2O2$strains)
tbH2O2$Cb.vs.Cv = tbH2O2$Cb / tbH2O2$Cv
tbH2O2$Cv.vs.Cb = tbH2O2$Cv / tbH2O2$Cb
tbH2O2$Cb0.5.vs.Cv = tbH2O2$Cb0.5 / tbH2O2$Cv
tbH2O2$half.vs.full = tbH2O2$Cb0.5 / tbH2O2$Cb
str( tbH2O2  )
setwd("~/github/LOH_H2O2_2012-master/analysis")
###############
#Load 2013 H2O2-LOH results
list.files(pattern="csv", path="output")
tb2 = read.csv("output/LOHH2O2_all_20131127.csv")
rownames(tb2) = as.character(tb2$strains)
tb2= tb2[-c(3,14), ]
tb2 = read.csv("output/LOHH2O2_all_20131127.csv")
rownames(tb2) = as.character(tb2$strains)
tb2$strains
list.files(pattern="csv", path="output")
tb2 = read.csv("output/LOHH2O2_all_20131127.csv")
rownames(tb2) = as.character(tb2$strains)
tb2$strains
str(tb2)
tb2$strains
View(tb2)
##############
#Load 2013 H2O2-LOH results
list.files(pattern="csv", path="output")
tb2 = read.csv("output/LOHH2O2_all_20131127.csv")
rownames(tb2) = as.character(tb2$strains)
tb2= tb2[-c(3,14), ]
tb = read.table("summary.new.by.strain.csv", header=T, sep="\t");
tb.old = tb;
labels = names( tb.old );
tb = tb.old[, c("strain","ARLS","R0","G","CLS","Tc", "Tg","Tmmax","Tbmax", "Td", "Tdmax","TLmax","Lmax",
"b.max", "b.min", "strains", "L0.all", "L0.small" , "Pbt0","Pb0.5t0", "Pbt0.b") ];
tb$CLS.vs.Tc = tb$CLS / tb$Tc;
tb$Tg.vs.Tc = tb$Tg / tb$Tc;
tb$strain = as.character(tb$strain)
tb.old = tb;
tb = tb.old[1:13,] #remove rad52DD
tb.test = tb[1:11,]
summary(lm(Tg.vs.Tc ~ ARLS, data=tb.test)) #re-run the old results, just to double-check
plot( tb.test$Tg.vs.Tc ~ tb.test$ARLS )
text(tb.test$ARLS, tb.test$Tg.vs.Tc, tb.test$strains)
##### merge tb and tb2
tb$strains = tb$strain
tb3a = merge(tb, tb2, by='strains', all=T)
summary(lm(1/tb3a$Cb.vs.Cv ~ tb3a$ARLS))
summary(lm(tb3a$Cv.vs.Cb.byMeans ~ tb3a$ARLS))
